!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=n,this._name=e.name,this._id=e._id,this._ownerId=e.owner._id,this._userId=c,this._link=e.link,this._likes=e.likes,this._handleCardClick=r,this._handleConfirmDelete=o,this._handleLikeClick=i,this._api=a}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".place").cloneNode(!0)}},{key:"_handleImageClick",value:function(){this._handleCardClick(this._name,this._link)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(t){e._handleLikeClick(e,t.target.classList.contains("place__like_active"))})),this._element.querySelector(".place__remove").addEventListener("click",(function(){e._handleConfirmDelete(e._id,e._element)})),this._cardImage.addEventListener("click",(function(){e._handleImageClick()}))}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".place__image"),this._likeButton=this._element.querySelector(".place__like"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".place__name").textContent=this._name,this._element.querySelector(".place__like-count").textContent=this._likes.length,this._ownerId!==this._userId&&this._element.querySelector(".place__remove").remove(),this._likes.find((function(t){return e._userId===t._id}))&&this._likeButton.classList.add("place__like_active"),this._element}},{key:"setLikeCard",value:function(e,t){this._likeButton=this._element.querySelector(".place__like"),this.likeCount=this._element.querySelector(".place__like-count"),e?(this._likeButton.classList.remove("place__like_active"),this.likeCount.textContent=t.likes.length):(this._likeButton.classList.add("place__like_active"),this.likeCount.textContent=t.likes.length)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._inputList=Array.from(t.querySelectorAll(n.inputSelector)),this._submitButton=t.querySelector(n.submitButtonSelector),this._errorMessage=n.errorMessage,this._errorInput=n.errorInput,this._inactiveButton=n.inactiveButton}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e){var t=e.getAttribute("name"),n=this._form.querySelector("#".concat(t,"-error"));e.classList.add(this._errorInput),n.textContent=e.validationMessage,n.classList.add(this._errorMessage)}},{key:"_hideInputError",value:function(e){var t=e.getAttribute("name"),n=this._form.querySelector("#".concat(t,"-error"));e.classList.remove(this._errorInput),n.classList.remove(this._errorMessage),n.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButton),this._submitButton.setAttribute("disabled",!0)):(this._submitButton.classList.remove(this._inactiveButton),this._submitButton.removeAttribute("disabled",!0))}},{key:"_setListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.addItem(n)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),c(this,"_handleOverClose",(function(e){e.target.classList.contains("popup")&&n.close()})),this._popup=document.querySelector(t),this._btnclose=this._popup.querySelector(".popup__close")}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){this._btnclose.addEventListener("click",this.close.bind(this)),this._popup.addEventListener("mousedown",this._handleOverClose)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._cardPicture=document.querySelector(".popup__image"),t._cardCaption=document.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e,t){f(y(a.prototype),"open",this).call(this),this._cardPicture.src=t,this._cardPicture.alt=e,this._cardCaption.textContent=e}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._handleFormSubmit=t,r._api=n,r._formElement=r._popup.querySelector(".form"),r._inputList=r._popup.querySelectorAll(".form__input"),r._submitButton=r._popup.querySelector(".form__submit"),r}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;b(E(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"setLoading",value:function(e){this._submitButton.value=e?"Сохранение...":"Сохранить"}},{key:"close",value:function(){b(E(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function I(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmitAction=t,n._formElement=n._popup.querySelector(".form"),n._submitButton=n._formElement.querySelector(".form__submit"),n}return t=a,(n=[{key:"open",value:function(e,t){C(R(a.prototype),"open",this).call(this),this._cardId=e,this._cardElement=t}},{key:"setEventListeners",value:function(){var e=this;C(R(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitAction(e._cardId,e._cardElement)}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.selectorName,r=t.selectorInfo,o=t.selectorAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(r),this._userPhoto=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e={};return e.name=this._userName.textContent,e.activity=this._userInfo.textContent,e.avatar=this._userPhoto.src,e}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about}},{key:"setUserPhoto",value:function(e){this._userPhoto.src=e.avatar}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"postCard",value:function(e){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"getUserData",value:function(){return fetch(this._baseUrl+"/users/me",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"setUserData",value:function(e){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name2,about:e.occupation})}).then(this._checkResponse)}},{key:"setNewAvatar",value:function(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatarlink})}).then(this._checkResponse)}},{key:"setLikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector("#editButton"),D=document.querySelector("#addButton"),V=document.querySelector(".profile__photo-edit-button"),N=document.querySelector("#formEdit"),M=N.querySelector("#name"),J=N.querySelector("#occupation"),F=document.querySelector("#formAdd"),G=document.querySelector("#formAvatar"),H={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",errorMessage:"form__error_active",errorInput:"form__input_error",inactiveButton:"form__submit_inactive"};function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $=new U({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"bebc4145-001f-487f-8afd-8c22bbd3883b","Content-Type":"application/json"}}),K=new T({selectorName:".profile__name",selectorInfo:".profile__description",selectorAvatar:".profile__photo"}),Q=new S("#popupEdit",(function(e){Q.setLoading(!0),$.setUserData(e).then((function(t){console.log(e),K.setUserInfo(t),Q.close()})).catch((function(e){return console.log(e)})).finally((function(){Q.setLoading(!1)}))}));Q.setEventListeners();var W=new S("#popupAvatar",(function(e){W.setLoading(!0),$.setNewAvatar(e).then((function(e){K.setUserPhoto(e),W.close()})).catch((function(e){return console.log(e)})).finally((function(){W.setLoading(!1)}))}));W.setEventListeners(),V.addEventListener("click",(function(){ue.resetValidation(),W.open()}));var X=new _("#popupPic");function Y(e,t){X.open(e,t)}function Z(e,t){(t?$.deleteLikeCard(e._id):$.setLikeCard(e._id)).then((function(n){e.setLikeCard(t,n)})).catch((function(e){return console.log(e)}))}X.setEventListeners();var ee=new q("#popupCon",(function(e,t){$.deleteCard(e).then((function(){t.remove(),ee.close()})).catch((function(e){return console.log(e)}))}));function te(e,t){ee.open(e,t),console.log(e),console.log(t)}function ne(e){return new t(e,".places-template",Y,te,Z,$,ie)}ee.setEventListeners();var re=new i({renderer:function(e){return ne(e).generateCard()}},".places"),oe=new S("#popupAdd",(function(e){oe.setLoading(!0),$.postCard(e).then((function(e){var t=ne(e).generateCard();re.addItem(t),oe.close()})).catch((function(e){return console.log(e)})).finally((function(){oe.setLoading(!1)}))}));oe.setEventListeners(),x.addEventListener("click",(function(){Q.open();var e=K.getUserInfo();M.value=e.name,J.value=e.activity,ae.resetValidation()})),D.addEventListener("click",(function(){ce.resetValidation(),oe.open()}));var ie,ae=new r(N,H),ce=new r(F,H),ue=new r(G,H);ae.enableValidation(),ce.enableValidation(),ue.enableValidation(),Promise.all([$.getUserData(),$.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ie=o._id,re.renderItems(i),K.setUserInfo(o),K.setUserPhoto(o)})).catch((function(e){return console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,